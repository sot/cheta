cheta.fetch_eng.Msidset
=======================

.. py:class:: cheta.fetch_eng.Msidset(msids, start=LAUNCH_DATE, stop=None, filter_bad=True, stat=None)

   Bases: :py:obj:`cheta.fetch.Msidset`


   
   Fetch a set of MSIDs from the engineering telemetry archive.
   Same as MSIDset class but with filter_bad=True by default.

   :param msids: list of MSID names (case-insensitive)
   :param start: start date of telemetry (Chandra.Time compatible)
   :param stop: stop date of telemetry (current time if not supplied)
   :param filter_bad: automatically filter out bad values
   :param stat: return 5-minute or daily statistics ('5min' or 'daily')
   :param unit_system: Unit system (cxc|eng|sci, default=current units)

   :returns: Dict-like object containing MSID instances keyed by MSID name















   ..
       !! processed by numpydoc !!

   .. py:attribute:: __doc__
      :value: Multiline-String

      .. raw:: html

         <details><summary>Show Value</summary>

      .. code-block:: python

         """Fetch a set of MSIDs from the engineering telemetry archive.
             Same as MSIDset class but with filter_bad=True by default.
         
             :param msids: list of MSID names (case-insensitive)
             :param start: start date of telemetry (Chandra.Time compatible)
             :param stop: stop date of telemetry (current time if not supplied)
             :param filter_bad: automatically filter out bad values
             :param stat: return 5-minute or daily statistics ('5min' or 'daily')
             :param unit_system: Unit system (cxc|eng|sci, default=current units)
         
             :returns: Dict-like object containing MSID instances keyed by MSID name
             """

      .. raw:: html

         </details>




   .. py:attribute:: MSID

